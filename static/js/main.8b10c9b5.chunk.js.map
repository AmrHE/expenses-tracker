{"version":3,"sources":["context/contextReducer.js","context/context.js","constants/categories.js","CustomHooks/useTransactions.js","Components/Details/detailsStyles.js","Components/Details/Details.jsx","Components/Main/mainStyle.js","Components/Snackbar/SnackbarStyles.js","Components/Snackbar/Snackbar.jsx","utils/formatDate.js","Components/Main/Form/FormStyles.js","Components/Main/Form/Form.jsx","Components/Main/List/listStyles.js","Components/Main/List/List.jsx","Components/InfoCard/InfoCard.jsx","Components/Main/Main.jsx","appStyle.js","App.js","index.js"],"names":["contextReducer","state","action","transactions","type","filter","t","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","acc","cur","amount","value","deleteTransaction","addTransaction","transaction","incomeColors","expenseColors","incomeCategories","color","expenseCategories","useTransactions","title","forEach","c","TransactionsPerType","useContext","total","categories","console","log","category","find","filteredCategories","chartData","datasets","data","map","backgroundColor","labels","makeStyles","income","borderBottom","expense","Details","classes","useStyles","Card","className","CardHeader","CardContent","Typography","varient","theme","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cartContent","divider","margin","root","width","marginTop","spacing","CustomizedSnackbar","open","setOpen","handleClose","e","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","elevation","variant","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","radioGroup","display","justifyCOntent","marginButtom","button","Form","useState","formData","setFormData","segment","useSpeechContext","createTransaction","Number","isNaN","includes","uuidv4","useEffect","intent","isFinal","entities","entity","charAt","slice","toLowerCase","IC","EC","selectedCategories","Grid","container","item","xs","align","gutterBottom","words","word","FormControl","fullWidth","InputLabel","Select","onChange","target","MenuItem","key","TextField","label","Button","onClick","avatarIncome","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountOnEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Delete","isIncome","Math","round","random","InfoCard","style","textAlign","padding","Main","subheader","LineHeight","Divider","cardContent","desktop","breakpoints","up","mobile","down","main","paddingBottom","last","marginBottom","grid","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","alignItems","justify","sm","ref","ReactDOM","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.8b10c9b5.chunk.js","sourcesContent":["//Reducer ==> a function that takes in old state, and an action ==> then returns newState...\r\n\r\nconst contextReducer = (state, action) => {\r\n\r\n  let transactions;\r\n  switch (action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      transactions = state.filter((t) => t.id !== action.payload);\r\n      localStorage.setItem('transactions', JSON.stringify(transactions));\r\n      return transactions;\r\n      \r\n      case 'ADD_TRANSACTION':\r\n        transactions = [action.payload, ...state];\r\n        localStorage.setItem('transactions', JSON.stringify(transactions));\r\n        return transactions;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default contextReducer;","import React, { useReducer, createContext } from 'react';\r\nimport contextReducer from './contextReducer';\r\n\r\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || [];\r\n\r\nexport const ExpenseTrackerContext = createContext(initialState);\r\n\r\nexport const Provider = ({ children }) => {\r\n  const [transactions, dispatch] = useReducer(contextReducer, initialState)\r\n  \r\n  //Action Creators\r\n  const deleteTransaction = (id) => dispatch({ type: 'DELETE_TRANSACTION', payload: id });\r\n  const addTransaction = (transaction) => dispatch({ type: 'ADD_TRANSACTION', payload: transaction });\r\n\r\n  const balance = transactions.reduce((acc, cur) => cur.type === 'Expense' ? acc - cur.amount : acc + cur.amount, 0)\r\n  \r\n  return (\r\n    <ExpenseTrackerContext.Provider value={{ \r\n      deleteTransaction,\r\n      addTransaction,\r\n      transactions,\r\n      balance\r\n    }}>\r\n      {children}\r\n    </ExpenseTrackerContext.Provider>\r\n  )\r\n};","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\r\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\r\n\r\nexport const incomeCategories = [\r\n  { type: 'Business', amount: 0, color: incomeColors[0] },\r\n  { type: 'Investments', amount: 0, color: incomeColors[1] },\r\n  { type: 'Extra income', amount: 0, color: incomeColors[2] },\r\n  { type: 'Deposits', amount: 0, color: incomeColors[3] },\r\n  { type: 'Lottery', amount: 0, color: incomeColors[4] },\r\n  { type: 'Gifts', amount: 0, color: incomeColors[5] },\r\n  { type: 'Salary', amount: 0, color: incomeColors[6] },\r\n  { type: 'Savings', amount: 0, color: incomeColors[7] },\r\n  { type: 'Rental income', amount: 0, color: incomeColors[8] },\r\n];\r\n\r\nexport const expenseCategories = [\r\n  { type: 'Bills', amount: 0, color: expenseColors[0] },\r\n  { type: 'Car', amount: 0, color: expenseColors[1] },\r\n  { type: 'Clothes', amount: 0, color: expenseColors[2] },\r\n  { type: 'Travel', amount: 0, color: expenseColors[3] },\r\n  { type: 'Food', amount: 0, color: expenseColors[4] },\r\n  { type: 'Shopping', amount: 0, color: expenseColors[5] },\r\n  { type: 'House', amount: 0, color: expenseColors[6] },\r\n  { type: 'Entertainment', amount: 0, color: expenseColors[7] },\r\n  { type: 'Phone', amount: 0, color: expenseColors[8] },\r\n  { type: 'Pets', amount: 0, color: expenseColors[9] },\r\n  { type: 'Other', amount: 0, color: expenseColors[10] },\r\n];\r\n\r\nexport const resetCategories = () => {\r\n  incomeCategories.forEach((c) => c.amount = 0);\r\n  expenseCategories.forEach((c) => c.amount = 0);\r\n};","import { useContext } from 'react';\r\nimport { ExpenseTrackerContext } from '../context/context';\r\nimport { incomeCategories, expenseCategories, resetCategories } from '../constants/categories';\r\n\r\n\r\n\r\n// const transaction =  [\r\n//   { id: 1, type: 'Income', amount: 50, category: 'Salary' },\r\n//   { id: 1, type: 'Income', amount: 100, category: 'Salary' },\r\n//   { id: 1, type: 'Income', amount: 250, category: 'Business' },\r\n// ]\r\n\r\n//  const categories = [\r\n//    { type: 'Business',     amount: 0, color: incomeColors[0] },\r\n//    { type: 'Investments',  amount: 0, color: incomeColors[1] },\r\n//    { type: 'Salary',       amount: 0, color: incomeColors[6] },\r\n//  ]\r\n\r\n\r\n//parameter (title)=== (Income || Expense)\r\nconst useTransactions = (title) => {\r\n  resetCategories();\r\n  //call transactions from our context\r\n  const { transactions } = useContext(ExpenseTrackerContext);\r\n  //Filter transactions by type(Income || Expense)\r\n  const TransactionsPerType = transactions.filter((t) => t.type === title);\r\n  //Sum the amount of the transactions of a specific type\r\n  const total = TransactionsPerType.reduce((acc, cur) => acc += cur.amount, 0);     \r\n\r\n  //Call/Define the categories of a specific type\r\n  const categories = title === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  console.log({TransactionsPerType, total, categories});\r\n  //Loop over transactions\r\n  TransactionsPerType.forEach((t) => {\r\n    //Match the transaction category with category type\r\n    const category = categories.find((c) => c.type === t.category);\r\n\r\n    //add (transaction amount ==> t.amount) to the (total category amount ==>categpry.amount) \r\n    if(category) category.amount += t.amount;\r\n  });\r\n\r\n  //filter the categories that only have amount > zero\r\n  const filteredCategories = categories.filter((c) => c.amount > 0);\r\n\r\n  //extract data as needed for chart.js\r\n  const chartData = {\r\n    datasets: [{\r\n      data: filteredCategories.map((c) => c.amount),\r\n      backgroundColor: filteredCategories.map((c) => c.color),\r\n    }],\r\n    labels: filteredCategories.map((c) => c.type),\r\n  }\r\n\r\n  return { total, chartData }\r\n};\r\n\r\nexport default useTransactions;","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles(() => ({\r\n  income: {\r\n    borderBottom: '10px solid rgba(0, 255, 0, 0.5)' \r\n  },\r\n  expense: {\r\n    borderBottom: '10px solid rgba(255, 0, 0, 0.5)' \r\n  }\r\n}));","import React from 'react';\r\nimport { Card, CardHeader,CardContent, Typography } from '@material-ui/core';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport useTransactions from '../../CustomHooks/useTransactions';\r\n\r\nimport useStyles from './detailsStyles';\r\n\r\n\r\nconst Details = ({ title }) => {\r\n  const classes = useStyles();\r\n  const { total, chartData } = useTransactions(title);\r\n\r\n\r\n  return (\r\n    <Card className={title === \"Income\" ? classes.income : classes.expense}>\r\n      <CardHeader title={title} />\r\n      <CardContent>\r\n        <Typography varient=\"h5\">${total}</Typography>\r\n        <Doughnut data={chartData} />\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\nexport default Details;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  cartContent: {\r\n    paddingTop: 0,\r\n  },\r\n  divider: {\r\n    margin: '20px 0',\r\n  },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%', \r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport useStyles from  './SnackbarStyles';\r\n\r\n\r\nconst CustomizedSnackbar = ({ open, setOpen }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (e ,reason) => {\r\n    if(reason === 'clickaway') return;\r\n    setOpen(false);\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n      \r\n      >\r\n        <MuiAlert onClose={handleClose} severity={'success'} elevation={6} variant=\"filled\">\r\n          Transaction Successfully Created\r\n        </MuiAlert>\r\n\r\n      </Snackbar>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomizedSnackbar\r\n","const formatDate = (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getMonth() + 1}`;\r\n  let day = `${d.getDate()}`;\r\n  const year = `${d.getFullYear()}`;\r\n\r\n  if(month.length < 2) {\r\n    month = `0${month}`\r\n  }\r\n\r\n  if(day.length < 2) {\r\n    day = `0${day}`\r\n  }\r\n\r\n  return [year, month, day].join('-');\r\n}\r\n\r\nexport default formatDate;","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles(() => ({\r\n  radioGroup: {\r\n    display: 'flex',\r\n    justifyCOntent: 'center',\r\n    marginButtom: '-10px',\r\n  },\r\n  button: {\r\n    marginTop: '20px'\r\n  },\r\n}));","import React, { useState, useEffect, useContext } from 'react'\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport CustomizedSnackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport useStyles from './FormStyles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n}\r\n\r\nconst Form = () => {\r\n  const classes = useStyles();\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n    const transaction = { ...formData, amount: Number(formData.amount), id: uuidv4() };\r\n    setOpen(true);\r\n    addTransaction(transaction);\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(segment) {\r\n      if(segment.intent.intent === 'add_expense' ) {\r\n        setFormData({ ...formData, type:'Expense' });\r\n      } else if(segment.intent.intent === 'add_income') {\r\n          setFormData({ ...formData, type:'Income' });\r\n      } else if(segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      }else if(segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((entity) => {\r\n        //reformating the category upperCases and lowerCases\r\n        const category = `${entity.value.charAt(0)}${entity.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (entity.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: entity.value })\r\n            break;\r\n          case 'category':\r\n            if(incomeCategories.map((IC) => IC.type).includes(category)){\r\n              setFormData({ ...formData, type: 'Income', category })\r\n            } else if(expenseCategories.map((EC) => EC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category })\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: entity.value })\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n      if(segment.isFinal && formData.type && formData.date && formData.category && formData.amount) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment])\r\n\r\n\r\n  const selectedCategories = formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <CustomizedSnackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {/* Here should contains what we get from Speechly */}\r\n          {segment && segment.words.map((word) => word.value).join(\" \")}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type:e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n          {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" fullWidth value={formData.amount} onChange={(e) => setFormData({...formData, amount: e.target.value})} />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField type=\"date\" label=\"Date\" fullWidth value={formData.date} onChange={(e) => setFormData({...formData, date: formatDate(e.target.value)})} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  avatarIncome: {\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n  avatarExpense: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n  },\r\n  list: {\r\n    maxHeight: '150px',\r\n    overflow: 'auto',\r\n  },\r\n}));","import React, { useContext } from 'react';\r\nimport { List as MUIList, ListItem, ListItemAvatar, ListItemText, Avatar, ListItemSecondaryAction, IconButton, Slide } from '@material-ui/core';\r\nimport { Delete, MoneyOff } from '@material-ui/icons';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport useStyles from './listStyles';\r\n\r\nconst List = () => {\r\n  const classes = useStyles();\r\n  const { deleteTransaction, transactions } = useContext(ExpenseTrackerContext);\r\n\r\n\r\n  return (\r\n    <MUIList dense={false} className={classes.list}>\r\n      {transactions.map((transaction) => (\r\n        <Slide direction=\"down\" in mountOnEnter unmountOnExit key={transaction.id}>\r\n          <ListItem>\r\n            <ListItemAvatar>\r\n              <Avatar \r\n                className={\r\n                  transaction.type === 'Income' ? \r\n                  classes.avatarIncome : \r\n                  classes.avatarExpense \r\n                }\r\n              >\r\n                <MoneyOff />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={`${transaction.category}`} secondary={`$${transaction.amount} - ${transaction.date}`}/>\r\n            <ListItemSecondaryAction>\r\n              <IconButton  edge=\"end\" aria-label=\"delete\" onClick={() => deleteTransaction(transaction.id)}>\r\n                <Delete />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </Slide>\r\n      ))}\r\n    </MUIList>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import React from 'react'\r\n\r\n// returns 50% => 1 and 50% => 0 which means (true or false)\r\nconst isIncome = Math.round(Math.random());\r\n\r\nconst InfoCard = () => {\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '0 10%' }}>\r\n      Try saying: <br></br>\r\n      Add {isIncome ? 'Income ' : 'Expense '} \r\n      for ${isIncome ? '100 ' : '50 '}  \r\n      in category {isIncome ? 'Salary ' : 'House '}  \r\n      for {isIncome ? 'Next Monday' : 'Last Tuesday'}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InfoCard\r\n","import React, { useContext } from 'react';\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core';\r\nimport { ExpenseTrackerContext } from '../../context/context';\r\nimport useStyles from './mainStyle';\r\nimport Form from './Form/Form';\r\nimport List from './List/List';\r\nimport InfoCard from '../InfoCard/InfoCard';\r\n\r\n\r\nconst Main = () => {\r\n  const classes = useStyles(); \r\n  const { balance } = useContext(ExpenseTrackerContext);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title=\"Expenses Tracker\" subheader=\"Powered by Speechly\" />\r\n      <CardContent>\r\n        <Typography align=\"center\" variant=\"h5\">Total Balance ${balance}</Typography>\r\n        <Typography variant=\"subtitle1\" style={{ LineHeight: '1.5em', marginTop: '20px' }}>\r\n          <InfoCard />\r\n        </Typography>\r\n        <Divider className={classes.divider}/>\r\n        <Form />\r\n      </CardContent>\r\n      \r\n      <CardContent className={classes.cardContent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <List/>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Main\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  desktop: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  mobile: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  main: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingBottom: '5%',\r\n    },\r\n  },\r\n  last: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginBottom: theme.spacing(3),\r\n      paddingBottom: '200px',\r\n    },\r\n  },\r\n  grid: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));","import React, { useRef, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { PushToTalkButton, PushToTalkButtonContainer, ErrorPanel } from '@speechly/react-ui';\nimport { SpeechState, useSpeechContext } from '@speechly/react-client';\nimport Details from './Components/Details/Details';\nimport Main from './Components/Main/Main';\nimport useStyles from './appStyle';\n\n\nfunction App() {\n  const classes = useStyles();\n  const { speechState } = useSpeechContext();\n  const main = useRef(null)\n\n  const executeScroll = () => main.current.scrollIntoView();\n\n  useEffect(() => {\n    if(speechState === SpeechState.Recording) {\n      executeScroll();\n    }\n  }, [speechState]);\n\n  return (\n    <div>\n      <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"center\" style={{height: '100vh'}}>\n        <Grid item xs={12} sm={3} className={classes.mobile}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid ref={main} item xs={12} sm={3} className={classes.main}>\n          <Main />\n        </Grid>\n        <Grid item xs={12} sm={3} className={classes.desktop}>\n          <Details title=\"Income\" />\n        </Grid>\n        <Grid item xs={12} sm={3} className={classes.last}>\n          <Details title=\"Expense\"/>\n        </Grid>\n      <PushToTalkButtonContainer>\n        <PushToTalkButton />\n        <ErrorPanel />\n      </PushToTalkButtonContainer>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { SpeechProvider } from '@speechly/react-client';\nimport App from './App';\nimport { Provider } from './context/context';\nimport './index.css';\n\nReactDOM.render(\n  <SpeechProvider appId=\"247f43d2-fc40-490e-8b60-24945a944474\" language=\"en-US\">\n  <Provider>\n    <App />\n  </Provider>\n  </SpeechProvider>,\n  document.getElementById('root'))\n;"],"sourceRoot":""}